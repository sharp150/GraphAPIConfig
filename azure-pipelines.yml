trigger:
- main

pool:
  vmImage: 'windows-latest'

stages:
- stage: Validate
  jobs:
  - job: Import
    continueOnError: false
    steps:
    - task: CmdLine@2
      name: CloneGraphAPI
      inputs:
        script: 'git clone https://github.com/wesley-trust/GraphAPI.git'
        workingDirectory: '$(System.ArtifactsDirectory)'
    - task: CmdLine@2
      name: CloneToolKit
      inputs:
        script: 'git clone https://github.com/wesley-trust/ToolKit.git'
        workingDirectory: '$(System.ArtifactsDirectory)'
    - task: PowerShell@2
      name: InvokeWTValidateCAPolicy
      inputs:
        targetType: 'inline'
        script: |
          
          # Dot source and execute function
          . $(System.ArtifactsDirectory)\GraphAPI\Public\AzureAD\ConditionalAccess\Invoke-WTValidateCAPolicy.ps1
          $ValidateCAPolicies = Invoke-WTValidateCAPolicy `
            -Path $(Build.Repository.LocalPath)\AzureAD\ConditionalAccess
          
          # If there are policies, convert to JSON and export
          if ($ValidateCAPolicies){
            $ValidateCAPolicies | ConvertTo-Json -Depth 10 | Out-File -Force -FilePath $(Pipeline.Workspace)\Validate.json
          }
        pwsh: true
        workingDirectory: '$(System.ArtifactsDirectory)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)\Validate.json'
        artifact: 'Import'
        publishLocation: 'pipeline'
- stage: Plan
  dependsOn: Validate
  variables:
    ValidateCAPolicies: $[ stageDependencies.Validate.Import.outputs['InvokeWTValidateCAPolicy.ValidateObject'] ]
  jobs:
  - deployment: Evaluate
    continueOnError: false
    environment: staging
    strategy:
     runOnce:
       deploy:
        steps:
          - task: CmdLine@2
            name: CloneGraphAPI
            inputs:
              script: 'git clone https://github.com/wesley-trust/GraphAPI.git'
              workingDirectory: '$(System.ArtifactsDirectory)'
          - task: CmdLine@2
            name: CloneToolKit
            inputs:
              script: 'git clone https://github.com/wesley-trust/ToolKit.git'
              workingDirectory: '$(System.ArtifactsDirectory)'
          - task: PowerShell@2
            name: InvokeWTPlanCAPolicy
            inputs:
              targetType: 'inline'
              script: |
                
                # Import and convert policies from JSON
                $ValidateCAPolicies = Get-Content -Raw -Path $(Pipeline.Workspace)\Import\Validate.json | ConvertFrom-Json -Depth 10
                
                . $(System.ArtifactsDirectory)\GraphAPI\Public\AzureAD\ConditionalAccess\Invoke-WTPlanCAPolicy.ps1
                  $PlanCAPolicies = Invoke-WTPlanCAPolicy `
                    -TenantDomain $(TenantDomain) `
                    -ClientID ${env:CLIENTID} `
                    -ClientSecret ${env:CLIENTSECRET} `
                    -ConditionalAccessPolicies $ValidateCAPolicies `
                    -UpdateExistingPolicies `
                    -RemoveExistingPolicies `
                    -Force
                
                if ($PlanCAPolicies){
                  
                  # Set Apply vaiable to true
                  echo "##vso[task.setvariable variable=Apply;isOutput=true;]$true"
                  
                  # Convert to JSON and export
                  $PlanCAPolicies | ConvertTo-Json -Depth 10 | Out-File -Force -FilePath $(Pipeline.Workspace)\Plan.json
                }
              pwsh: true
              workingDirectory: '$(System.ArtifactsDirectory)'
            env:
              CLIENTID: $(ClientID)
              CLIENTSECRET: $(ClientSecret)
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Pipeline.Workspace)\Plan.json'
              artifact: 'Evaluate'
              publishLocation: 'pipeline'
- stage: Apply
  dependsOn: Plan
  variables:
    ValidateCAPolicies: $[ stageDependencies.plan.evaluate.outputs['InvokeWTPlanCAPolicy.Apply'] ]
  jobs:
  - deployment: Deploy
    continueOnError: false
    environment: production
    strategy:
     runOnce:
       deploy:
        steps:
          - task: CmdLine@2
            name: CloneGraphAPI
            inputs:
              script: 'git clone https://github.com/wesley-trust/GraphAPI.git'
              workingDirectory: '$(System.ArtifactsDirectory)'
          - task: CmdLine@2
            name: CloneToolKit
            inputs:
              script: 'git clone https://github.com/wesley-trust/ToolKit.git'
              workingDirectory: '$(System.ArtifactsDirectory)'
          - task: PowerShell@2
            name: InvokeWTApplyCAPolicy
            inputs:
              targetType: 'inline'
              script: |
                
                # Import and convert policies from JSON
                $PlanCAPolicies = Get-Content -Raw -Path $(Pipeline.Workspace)\Evaluate\Plan.json | ConvertFrom-Json -Depth 10
                
                . $(System.ArtifactsDirectory)\GraphAPI\Public\AzureAD\ConditionalAccess\Invoke-WTApplyCAPolicy.ps1
                      Invoke-WTApplyCAPolicy `
                        -TenantDomain $(TenantDomain) `
                        -ClientID ${env:CLIENTID} `
                        -ClientSecret ${env:CLIENTSECRET} `
                        -ConditionalAccessPolicies $PlanCAPolicies `
                        -UpdateExistingPolicies `
                        -RemoveExistingPolicies `
                        -Pipeline
              pwsh: true
              workingDirectory: '$(System.ArtifactsDirectory)'
            env:
              CLIENTID: $(ClientID)
              CLIENTSECRET: $(ClientSecret)
              GITHUBPAT: $(GitHubPAT)
              REPOHOME: $(Build.Repository.LocalPath)